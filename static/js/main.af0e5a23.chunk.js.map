{"version":3,"sources":["components/Select/select.module.css","pages/HomePage/homepage.module.css","apis/index.js","components/FuelMeter/index.js","components/Select/index.js","pages/HomePage/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","APIS","fuelApis","getStateDropdown","a","axios","get","then","res","data","results","catch","err","message","getPricesByState","state","params","citystate","highchartsMore","Highcharts","getOptions","fuelType","displayPrice","dieselPrice","petrolPrice","chart","type","plotBackgroundColor","plotBackgroundImage","plotBorderWidth","plotShadow","height","width","title","text","cityState","toUpperCase","priceDate","pane","startAngle","endAngle","yAxis","min","max","plotBands","from","to","color","scrollbar","enabled","rangeSelector","navigator","series","name","tooltip","valueSuffix","FuelMeter","highcharts","options","constructorType","Select","onChange","selectedItem","className","styles","event","persist","selected","value","target","selectedOptions","key","preventDefault","map","opt","defaultProps","HomePage","useState","stateList","setStateList","selectedState","setSelectedState","fuelData","setFuelData","useEffect","item","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,OAAS,yB,4DCA3BD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,uBAAuB,OAAS,yBAAyB,OAAS,yBAAyB,aAAe,iC,yICC3JC,EAEF,wEAFEA,EAIF,4DAyBWC,EAtBE,CACfC,iBAAiB,WAAD,4BAAE,sBAAAC,EAAA,sEACHC,IACVC,IAAIL,GACJM,MAAK,SAACC,GAAS,IAAD,EACb,iBAAOA,EAAIC,YAAX,aAAO,EAAUC,WAElBC,OAAM,SAACC,GAAD,OAASA,EAAIC,WANN,mFAAF,kDAAC,GAQjBC,iBAAiB,WAAD,4BAAE,WAAOC,GAAP,SAAAX,EAAA,sEACHC,IACVC,IAAIL,EAA2B,CAC9Be,OAAQ,CACNC,UAAWF,KAGdR,MAAK,SAACC,GAAS,IAAD,EACb,iBAAOA,EAAIC,YAAX,aAAO,EAAUC,WAElBC,OAAM,SAACC,GAAD,OAASA,EAAIC,WAVN,mFAAF,mDAAC,I,0DCbnBK,IAAeC,KAEf,IAAMC,EAAa,SAACC,EAAUZ,GAC5B,IAAMa,EACS,WAAbD,EAAA,OAAwBZ,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAMc,YAA9B,OAA4Cd,QAA5C,IAA4CA,OAA5C,EAA4CA,EAAMe,YAgEpD,MA/DgB,CACdC,MAAO,CACLC,KAAM,QACNC,oBAAqB,KACrBC,oBAAqB,KACrBC,gBAAiB,EACjBC,YAAY,EACZC,OAAQ,IACRC,MAAO,KAETC,MAAO,CACLC,KAAK,GAAD,cAAKzB,QAAL,IAAKA,OAAL,EAAKA,EAAM0B,UAAX,qBAA0Bd,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAUe,cAApC,oDAEU3B,QAFV,IAEUA,OAFV,EAEUA,EAAM4B,YAEtBC,KAAM,CACJC,YAAa,IACbC,SAAU,KAGZC,MAAO,CACLC,IAAK,EACLC,IAAK,IACLV,MAAO,CACLC,KAAM,aAERU,UAAW,CACT,CACEC,KAAM,EACNC,GAAI,GACJC,MAAO,WAET,CACEF,KAAM,GACNC,GAAI,GACJC,MAAO,WAET,CACEF,KAAM,GACNC,GAAI,IACJC,MAAO,aAIbC,UAAW,CACTC,SAAS,GAEXC,cAAe,CACbD,SAAS,GAEXE,UAAW,CACTF,SAAS,GAEXG,OAAQ,CACN,CACEC,KAAK,GAAD,OAAKhC,EAAL,UACJZ,KAAM,EAAEa,GAAgB,GACxBgC,QAAS,CACPC,YAAa,qBAiBRC,EATG,SAAC,GAAwB,IAAtBnC,EAAqB,EAArBA,SAAUZ,EAAW,EAAXA,KAC7B,OACE,cAAC,IAAD,CACEgD,WAAYtC,IACZuC,QAAStC,EAAWC,EAAUZ,GAC9BkD,gBAAiB,gB,QC7EjBC,EAAS,SAAC,GAAyC,IAAvCF,EAAsC,EAAtCA,QAASG,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAanC,OACE,wBACEC,UAAWC,SACXH,SAfkB,SAACI,GACrBA,EAAMC,UACN,IAAMC,EAAW,CACfC,MAAOH,EAAMI,OAAOC,gBAAgB,GAAGpC,KACvCqC,IAAKN,EAAMI,OAAOC,gBAAgB,GAAGF,OAEvCH,EAAMO,iBACFX,GACFA,EAASM,IAQTC,MAAK,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAcS,IAHvB,gBAKGb,QALH,IAKGA,OALH,EAKGA,EAASe,KAAI,SAACC,GAAD,OACZ,wBAAuBN,MAAK,OAAEM,QAAF,IAAEA,OAAF,EAAEA,EAAKH,IAAnC,gBACGG,QADH,IACGA,OADH,EACGA,EAAKN,OADR,OAAaM,QAAb,IAAaA,OAAb,EAAaA,EAAKH,WAO1BX,EAAOe,aAAe,CACpBjB,QAAS,GACTG,SAAU,aACVC,aAAc,CAAES,IAAK,GAAIH,MAAO,KAenBR,Q,OCUAgB,EArDE,WAAO,IAAD,EACaC,mBAAS,IADtB,mBACdC,EADc,KACHC,EADG,OAEqBF,mBAAS,CAAEN,IAAK,GAAIH,MAAO,KAFhD,mBAEdY,EAFc,KAECC,EAFD,OAGWJ,mBAAS,IAHpB,mBAGdK,EAHc,KAGJC,EAHI,KAKrBC,qBAAU,WACRlF,EAASC,mBAAmBI,MAAK,SAACE,GAChCsE,EAAatE,GACbwE,EAAiBxE,EAAK,SAEvB,IAEH2E,qBAAU,cAAU,CAACN,IAErBM,qBAAU,WACJJ,GAAiBA,EAAcT,KAAOS,EAAcZ,OACtDlE,EAASY,iBAAiBkE,EAAcT,KAAKhE,MAAK,SAACE,GACjD0E,EAAY1E,QAGf,CAACuE,IAMJ,OACE,sBAAKjB,UAAWC,OAAhB,UACE,qBAAKD,UAAWC,OAAhB,wCACA,yBAASD,UAAWC,SAApB,SACE,cAAC,EAAD,CACEN,QAASoB,EACTjB,SAVuB,SAACwB,GAC9BJ,EAAiBI,IAUXvB,aAAckB,MAGlB,0BAASjB,UAAWC,SAApB,UACE,8BACE,cAAC,EAAD,CAAW3C,SAAS,SAASZ,KAAI,OAAEyE,QAAF,IAAEA,OAAF,EAAEA,EAAW,OAEhD,8BACE,cAAC,EAAD,CAAW7D,SAAS,SAASZ,KAAI,OAAEyE,QAAF,IAAEA,OAAF,EAAEA,EAAW,UAGlD,0BAASnB,UAAWC,eAApB,UACE,6CACA,mBAAGsB,KAAK,6CAAR,4ECzCOC,MARf,WACE,OACE,qBAAKxB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnF,MAAK,YAAkD,IAA/CoF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.af0e5a23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"select_select__cArd6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"homepage_main__2li3f\",\"logo\":\"homepage_logo__1T61G\",\"picker\":\"homepage_picker__2JiCB\",\"meters\":\"homepage_meters__3bSsq\",\"attributions\":\"homepage_attributions__2T_IG\"};","import axios from \"axios\";\r\n\r\nconst APIS = {\r\n  STATE_LIST:\r\n    \"https://mfapps.indiatimes.com/ET_Calculators/citystate.htm?type=state\",\r\n  FUEL_PRICES_BY_STATE:\r\n    \"https://mfapps.indiatimes.com/ET_Calculators/oilprice.htm\",\r\n};\r\n\r\nconst fuelApis = {\r\n  getStateDropdown: async () => {\r\n    return await axios\r\n      .get(APIS.STATE_LIST)\r\n      .then((res) => {\r\n        return res.data?.results;\r\n      })\r\n      .catch((err) => err.message);\r\n  },\r\n  getPricesByState: async (state) => {\r\n    return await axios\r\n      .get(APIS.FUEL_PRICES_BY_STATE, {\r\n        params: {\r\n          citystate: state,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        return res.data?.results;\r\n      })\r\n      .catch((err) => err.message);\r\n  },\r\n};\r\nexport default fuelApis;\r\n","import React from \"react\";\r\nimport Highcharts from \"highcharts/highstock\";\r\nimport highchartsMore from \"highcharts/highcharts-more\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\nhighchartsMore(Highcharts);\r\n\r\nconst getOptions = (fuelType, data) => {\r\n  const displayPrice =\r\n    fuelType === \"diesel\" ? data?.dieselPrice : data?.petrolPrice;\r\n  const options = {\r\n    chart: {\r\n      type: \"gauge\",\r\n      plotBackgroundColor: null,\r\n      plotBackgroundImage: null,\r\n      plotBorderWidth: 0,\r\n      plotShadow: false,\r\n      height: 400,\r\n      width: 400,\r\n    },\r\n    title: {\r\n      text: `${data?.cityState} - ${fuelType?.toUpperCase()}\r\n            \r\n            as of ${data?.priceDate}`,\r\n    },\r\n    pane: {\r\n      startAngle: -150,\r\n      endAngle: 150,\r\n    },\r\n    // the value axis\r\n    yAxis: {\r\n      min: 0,\r\n      max: 140,\r\n      title: {\r\n        text: \"INR/Litre\",\r\n      },\r\n      plotBands: [\r\n        {\r\n          from: 0,\r\n          to: 60,\r\n          color: \"#55BF3B\", // green\r\n        },\r\n        {\r\n          from: 61,\r\n          to: 85,\r\n          color: \"#DDDF0D\", // yellow\r\n        },\r\n        {\r\n          from: 86,\r\n          to: 140,\r\n          color: \"#DF5353\", // red\r\n        },\r\n      ],\r\n    },\r\n    scrollbar: {\r\n      enabled: false,\r\n    },\r\n    rangeSelector: {\r\n      enabled: false,\r\n    },\r\n    navigator: {\r\n      enabled: false,\r\n    },\r\n    series: [\r\n      {\r\n        name: `${fuelType} price`,\r\n        data: [+displayPrice || 0],\r\n        tooltip: {\r\n          valueSuffix: \" \\u20B9/Litre\",\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  return options;\r\n};\r\n\r\nconst FuelMeter = ({ fuelType, data }) => {\r\n  return (\r\n    <HighchartsReact\r\n      highcharts={Highcharts}\r\n      options={getOptions(fuelType, data)}\r\n      constructorType={\"stockChart\"}\r\n    />\r\n  );\r\n};\r\nexport default FuelMeter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as styles from \"./select.module.css\";\r\n\r\nconst Select = ({ options, onChange, selectedItem }) => {\r\n  const onChangeLocal = (event) => {\r\n    event.persist();\r\n    const selected = {\r\n      value: event.target.selectedOptions[0].text,\r\n      key: event.target.selectedOptions[0].value,\r\n    };\r\n    event.preventDefault();\r\n    if (onChange) {\r\n      onChange(selected);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <select\r\n      className={styles.select}\r\n      onChange={onChangeLocal}\r\n      value={selectedItem?.key}\r\n    >\r\n      {options?.map((opt) => (\r\n        <option key={opt?.key} value={opt?.key}>\r\n          {opt?.value}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\nSelect.defaultProps = {\r\n  options: [],\r\n  onChange: () => {},\r\n  selectedItem: { key: \"\", value: \"\" },\r\n};\r\nSelect.propTypes = {\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      value: PropTypes.string,\r\n      key: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  selectedItem: PropTypes.shape({\r\n    value: PropTypes.string,\r\n    key: PropTypes.string,\r\n  }),\r\n};\r\nexport default Select;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport fuelApis from \"../../apis\";\r\nimport FuelMeter from \"../../components/FuelMeter\";\r\nimport Select from \"../../components/Select\";\r\nimport * as styles from \"./homepage.module.css\";\r\n\r\nconst HomePage = () => {\r\n  const [stateList, setStateList] = useState([]);\r\n  const [selectedState, setSelectedState] = useState({ key: \"\", value: \"\" });\r\n  const [fuelData, setFuelData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fuelApis.getStateDropdown().then((data) => {\r\n      setStateList(data);\r\n      setSelectedState(data[0]);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {}, [stateList]);\r\n\r\n  useEffect(() => {\r\n    if (selectedState && selectedState.key && selectedState.value) {\r\n      fuelApis.getPricesByState(selectedState.key).then((data) => {\r\n        setFuelData(data);\r\n      });\r\n    }\r\n  }, [selectedState]);\r\n\r\n  const onStateSelectionChange = (item) => {\r\n    setSelectedState(item);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.main}>\r\n      <div className={styles.logo}>Fuel Price Tracker - India</div>\r\n      <section className={styles.picker}>\r\n        <Select\r\n          options={stateList}\r\n          onChange={onStateSelectionChange}\r\n          selectedItem={selectedState}\r\n        />\r\n      </section>\r\n      <section className={styles.meters}>\r\n        <div>\r\n          <FuelMeter fuelType=\"diesel\" data={fuelData?.[0]} />\r\n        </div>\r\n        <div>\r\n          <FuelMeter fuelType=\"petrol\" data={fuelData?.[0]} />\r\n        </div>\r\n      </section>\r\n      <section className={styles.attributions}>\r\n        <p>Attributions</p>\r\n        <a href=\"https://www.freepik.com/vectors/background\">\r\n          Background vector created by starline - www.freepik.com\r\n        </a>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\nexport default HomePage;\r\n","import \"./App.css\";\nimport HomePage from \"./pages/HomePage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}